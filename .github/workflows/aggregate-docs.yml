name: SpecterOps Documentation Hub

on:
  workflow_dispatch:
  schedule:
    - cron: '0 12 * * *'  # Daily at noon

jobs:
  process-documentation:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install Dependencies
        run: pip install pyyaml
      
      - name: Process All Tools
        run: |
          cd scripts
          python tool_manager.py
      
      - name: Generate Mintlify Configuration
        run: |
          python scripts/generate_mintlify_config.py
      
      - name: Show Results
        run: |
          echo "üìÅ Created documentation:"
          find docs -name "*.md" | sort
          echo ""
          echo "üìä Processing summary:"
          if [ -f "_processing_results.json" ]; then
            cat _processing_results.json
          fi
      
      - name: Commit and Push
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Documentation Bot"
          
          git add docs/ mint.json
          git add _processing_results.json 2>/dev/null || true
          
          if ! git diff --staged --quiet; then
            TOOLS_COUNT=$(python3 -c "
            import json
            try:
                with open('_processing_results.json') as f:
                    data = json.load(f)
                print(data.get('tools_processed', 0))
            except:
                print(0)
            ")
            
            PAGES_COUNT=$(python3 -c "
            import json
            try:
                with open('_processing_results.json') as f:
                    data = json.load(f)
                print(data.get('total_pages', 0))
            except:
                print(0)
            ")
            
            git commit -m "üìö Update SpecterOps Documentation

            Tools processed: ${TOOLS_COUNT}
            Total pages: ${PAGES_COUNT}
            Updated: $(date '+%Y-%m-%d %H:%M UTC')"
            
            git push
            echo "‚úÖ Documentation updated successfully"
          else
            echo "‚ÑπÔ∏è  No changes to commit"
          fi