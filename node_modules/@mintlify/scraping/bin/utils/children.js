import { toMdast, defaultHandlers } from 'hast-util-to-mdast';
import { unified } from 'unified';
import { mdxJsxFlowElementHandler } from '../customComponents/selective.js';
export function turnChildrenIntoMdx(children, opts = { jsxImages: false }) {
    const hast = {
        type: 'root',
        children: children,
    };
    const handlers = { ...defaultHandlers };
    if (opts.jsxImages) {
        handlers['img'] = function (_, node) {
            Object.keys(node.properties).forEach((key) => {
                if (key !== 'src')
                    delete node.properties[key];
            });
            return mdxJsxFlowElementHandler(_, node);
        };
    }
    const mdxAst = unified()
        .use(function () {
        return function (tree) {
            const newTree = toMdast(tree, {
                handlers,
            });
            return newTree;
        };
    })
        .runSync(hast);
    mdxAst.children.forEach((child, index) => {
        if (child.type === 'html')
            mdxAst.children.splice(index, 1);
    });
    return mdxAst.children;
}
//# sourceMappingURL=children.js.map