import { CONTINUE, SKIP, visit } from 'unist-util-visit';
export function escapeCharactersOutsideCodeBlocks() {
    const charsToEscape = ['<', '{', '`'];
    const escapeRegex = new RegExp(`[${charsToEscape.join('')}]`, 'g');
    return function (tree) {
        visit(tree, function (node) {
            if (node.type === 'element') {
                if (node.tagName === 'pre' || node.tagName === 'code') {
                    return SKIP;
                }
            }
            if (node.type === 'text') {
                const escapedText = node.value.replace(escapeRegex, (match) => {
                    return `\\${match}`;
                });
                if (escapedText !== node.value) {
                    node.value = escapedText;
                    return CONTINUE;
                }
            }
            return CONTINUE;
        });
    };
}
//# sourceMappingURL=escape.js.map